{"version":3,"sources":["firebaseinit.tsx","Home.tsx","Login.tsx","utils.tsx","Classes.tsx","Class.tsx","Assignment.tsx","App.tsx","index.tsx"],"names":["firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Home","useHistory","push","Typography","uiConfig","signInFlow","signInSuccessURL","signInOptions","auth","EmailAuthProvider","PROVIDER_ID","GoogleAuthProvider","Login","props","Grid","container","style","marginTop","item","sm","borderRight","textAlign","variant","firebaseAuth","baseURL","apiRequest","data","a","console","log","route","payload","method","currentUser","Error","getIdToken","token","options","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","fetch","response","json","error","useStyles","makeStyles","theme","root","width","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","ClassCard","class","classid","classname","description","history","classes","Box","Card","CardActionArea","onClick","CardHeader","Avatar","aria-label","className","intToRGB","hashCode","match","slice","join","title","CardContent","color","component","str","hash","i","charCodeAt","c","toString","toUpperCase","substring","Classes","useState","undefined","classesList","setClassesList","user","useEffect","then","spacing","borderRadius","marginRight","alt","src","map","idx","CircularProgress","AssignmentCard","name","id","created_at","isTeacher","moment","calendar","StudentList","studentList","useParams","cid","open","setOpen","handleClose","IconButton","float","Dialog","onClose","DialogTitle","DialogContent","List","ListItem","ListItemIcon","photoURL","userid","teacherid","ListItemText","primary","DialogActions","Button","Class","status","setStatus","classData","setClassData","assignmentList","setAssignmentList","setIsTeacher","setStudentList","posting","setPosting","nameRef","useRef","descRef","updateAssignments","resp","students","assignments","uid","handleAssignmentCreate","current","value","desc","alert","joincode","aria-labelledby","TextField","autoFocus","margin","label","type","fullWidth","inputRef","disabled","required","multiline","rows","xs","registerPlugin","FilePondPluginFileRename","FilePondPluginFileEncode","FilePondPluginFileValidateSize","Transition","forwardRef","ref","Grow","appBar","position","flex","formControl","minWidth","selectEmpty","Submission","submitted","files","setFiles","aid","setToken","submitting","setSubmitting","entryPointRef","handleSubmission","entrypoint","replace","endsWith","submissions","some","e","filename","window","confirm","location","reload","message","onupdatefiles","allowMultiple","maxFiles","allowRevert","labelIdle","maxFileSize","labelMaxFileSizeExceeded","server","process","url","authorization","GradeSubmissions","setMethod","resultList","setResultList","submissionList","setSubmissionList","answerRef","inputStringRef","inputString","responses","fullScreen","TransitionComponent","AppBar","Toolbar","edge","Container","FormControl","InputLabel","Select","onChange","event","target","MenuItem","LinearProgress","avatarBackground","submission","fulfilled","correct","stdout","answer","includes","trimEnd","checkIfCorrect","studentname","reason","stderr","ViewAndRunCode","overflowY","timestamp","dense","Assignment","assignment","setAssignment","setSubmitted","setSubmissions","isSubmitted","renderSubmitted","flexGrow","menuButton","fontFamily","AvatarButton","anchorEl","setAnchorEl","aria-controls","aria-haspopup","currentTarget","displayName","Menu","keepMounted","Boolean","signOut","ButtonAppBar","React","joinOpen","setJoinOpen","createOpen","setCreateOpen","loading","setLoading","joinRef","handleJoinClass","code","joinCode","handleCreateClass","noWrap","cursor","path","DialogContentText","App","setUser","onAuthStateChanged","exact","AppWithRouter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1cc40b2e.chunk.js","sourcesContent":["import firebase from 'firebase';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAA1TX5okNugE04iEvST6Z0jdu-8oBpjzU\",\n    authDomain: \"codingscale-aa52f.firebaseapp.com\",\n    projectId: \"codingscale-aa52f\",\n    storageBucket: \"codingscale-aa52f.appspot.com\",\n    messagingSenderId: \"16059410715\",\n    appId: \"1:16059410715:web:cd05cdb86811c907f94bbe\",\n    measurementId: \"G-KL103DH8HV\"\n};\n\nif (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n}\n\nfirebase.analytics();","import {\n    Typography\n} from '@material-ui/core';\nimport { useHistory } from 'react-router-dom';\n\nfunction Home() {\n    const history = useHistory();\n\n    history.push('/h')\n\n    return (\n        <Typography>Home Screen!</Typography>\n    )\n}\n\nexport default Home;","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport firebase from 'firebase';\n\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\n\nconst uiConfig = {\n    signInFlow: 'popup',\n    signInSuccessURL: '/#/h',\n    signInOptions: [\n        firebase.auth.EmailAuthProvider.PROVIDER_ID,\n        firebase.auth.GoogleAuthProvider.PROVIDER_ID\n    ]\n}\n\nfunction Login(props: any) {\n\n    return (\n        <>\n            <Grid container style={{ marginTop: \"33%\" }}>\n                <Grid item sm={6} style={{ borderRight: \"1px solid black\" }}>\n                    <div style={{ textAlign: 'left', }}>\n                        <Typography variant='h3'>Welcome Back!</Typography>\n                        <Typography variant='h4'>We're so excited to see you again!</Typography>\n                    </div>\n                </Grid>\n                <Grid item sm={6}>\n                    <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default Login;","import firebase from 'firebase';\n\nconst auth = firebase.auth();\n\nexport const baseURL = \"https://91d5d13c06d0.ngrok.io\";\n\nexport const apiRequest = async (data:apiParams) => {\n    console.log('Fetching!!!')\n    let { route, payload, method } = data;\n\n    method = method ?? 'GET';\n\n    if (!auth.currentUser) throw new Error('Not signed in!')\n\n    const token = await auth.currentUser.getIdToken(true);\n\n    const options: any = {\n        method: method ?? 'GET', // *GET, POST, PUT, DELETE, etc.\n        mode: 'cors', // no-cors, *cors, same-origin\n        cache: 'no-cache', // *default, no-cache, reload, force-cache, only-if-cached\n        credentials: 'same-origin', // include, *same-origin, omit\n        headers: {\n            'Content-Type': 'application/json',\n            'authorization': token\n            // 'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        redirect: 'follow', // manual, *follow, error\n        referrerPolicy: 'no-referrer', // no-referrer, *no-referrer-when-downgrade, origin, origin-when-cross-origin, same-origin, strict-origin, strict-origin-when-cross-origin, unsafe-url\n        body: JSON.stringify(payload ?? {}) // body data type must match \"Content-Type\" header\n    }\n\n    if (method === 'GET') {\n        delete options.body;\n    }\n\n    const response = await fetch(baseURL + route, options)\n    const json = await response.json();\n\n    if (json.error) throw new Error(json.error);\n\n    return json;\n}\n\ninterface apiParams {\n    route: string;\n    payload?: any;\n    method: 'GET' | 'POST' | 'PUT' | 'DELETE';\n}","import classes from '*.module.sass';\nimport React, { useEffect, useState } from 'react';\n\nimport firebase from 'firebase';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Collapse from '@material-ui/core/Collapse';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport { red } from '@material-ui/core/colors';\nimport { useHistory } from 'react-router-dom';\n\nimport { apiRequest } from './utils';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"auto\"\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\nfunction ClassCard(props: any) {\n    const { classid, classname, description } = props.class;\n    const history = useHistory();\n    const classes = useStyles();\n    // const [anchorEl, setAnchorEl] = useState(null);\n\n    // const handleClick = (event: any) => {\n    //     setAnchorEl(event.currentTarget);\n    // };\n\n    // const handleClose = () => {\n    //     setAnchorEl(null);\n    // };\n\n    return (\n        <Box width=\"100%\">\n            <Card>\n                <CardActionArea onClick={() => history.push(`/c/${classid}`)}>\n                    <CardHeader\n                        avatar={\n                            <Avatar aria-label=\"recipe\" className={classes.avatar} style={{ backgroundColor: '#' + intToRGB(hashCode(classname)) }}>\n                                {classname.match(/\\b(\\w)/g).slice(0, 2).join('')}\n                            </Avatar>\n                        }\n                        // action={\n                        //     <>\n                        //         <IconButton aria-label=\"settings\">\n                        //             <MoreVertIcon onClick={handleClick} />\n                        //         </IconButton>\n                        //         <Menu\n                        //             id=\"simple-menu\"\n                        //             anchorEl={anchorEl}\n                        //             keepMounted\n                        //             open={Boolean(anchorEl)}\n                        //             onClose={handleClose}\n                        //         >\n                        //             <MenuItem onClick={handleClose}>Leave Class</MenuItem>\n                        //         </Menu>\n                        //     </>\n                        // }\n                        title={classname}\n                    />\n                    {description && (\n                        <>\n                            <CardContent>\n                                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                                    {description}\n                                </Typography>\n                            </CardContent>\n                        </>\n                    )}\n                </CardActionArea>\n            </Card >\n        </Box>\n    );\n}\n\nfunction Classes(props: any) {\n    const [classesList, setClassesList] = useState<any[] | undefined>(undefined);\n    const { user } = props;\n\n    useEffect(() => {\n        apiRequest({\n            route: \"/classes\",\n            method: 'GET'\n        }).then(data => setClassesList(data));\n    }, [])\n\n    const renderClasses = () => {\n        if (!classesList) {\n            return <CircularProgress style={{ marginLeft: \"50%\", marginTop: \"50px\" }} />\n        }\n\n        if (classesList.length === 0) {\n            return (\n                <>\n                    <img style={{ height: \"200px\", width: \"200px\", borderRadius: \"100%\", marginLeft: \"40%\", marginRight: \"40%\" }} alt=\"nothing here\" src=\"https://i.imgur.com/joO4I3D.png\"></img>\n                    <div style={{ textAlign: \"center\", marginLeft: \"38%\", marginRight: \"auto\", marginTop: \"25px\" }}>\n                        <Typography variant=\"h6\">No classes joined</Typography>\n                        <p><Typography variant=\"subtitle1\">Join a class and it will show up here.</Typography></p>\n                    </div>\n                </>\n            )\n        }\n\n        return classesList.map((data, idx) => {\n            return (\n                <Grid item sm={4}>\n                    <ClassCard key={idx} class={data} />\n                </Grid>\n            )\n        })\n    }\n\n    return (\n        <Grid container spacing={4}>\n            {renderClasses()}\n        </Grid>\n    )\n}\n\nfunction hashCode(str: any) { // java String#hashCode\n    var hash = 0;\n    for (var i = 0; i < str.length; i++) {\n        hash = str.charCodeAt(i) + ((hash << 5) - hash);\n    }\n    return hash;\n}\n\nfunction intToRGB(i: any) {\n    var c = (i & 0x00FFFFFF)\n        .toString(16)\n        .toUpperCase();\n\n    return \"00000\".substring(0, 6 - c.length) + c;\n}\n\nexport default Classes;","import React, { useEffect, useState, useRef } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Collapse from '@material-ui/core/Collapse';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Avatar from '@material-ui/core/Avatar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddButton from '@material-ui/icons/Add';\nimport { useHistory } from 'react-router-dom';\nimport AssignmentIcon from '@material-ui/icons/Assignment';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport PeopleIcon from '@material-ui/icons/People';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport PersonIcon from '@material-ui/icons/Person';\nimport moment from 'moment';\n\nimport { apiRequest } from './utils';\nimport { OpenInBrowserSharp } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        width: \"auto\"\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: \"grey\",\n    },\n}));\n\nfunction AssignmentCard(props: any) {\n    const { name, id, created_at, classid } = props;\n    const history = useHistory();\n    const classes = useStyles();\n\n    return (\n        <>\n            <Card>\n                <CardActionArea onClick={() => history.push(`/c/${classid}/a/${id}`)}>\n                    <CardHeader\n                        avatar={\n                            <Avatar className={classes.avatar}>\n                                <AssignmentIcon />\n                            </Avatar>\n                        }\n                        title={`You${props.isTeacher ? \"\" : \"r teacher\"} posted a new assignment: ` + name}\n                    />\n                    <CardContent>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {moment(created_at).calendar()}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n            </Card>\n        </>\n    )\n}\n\nfunction StudentList(props: any) {\n    const { studentList } = props;\n    const { cid } = useParams<any>();\n    const [open, setOpen] = useState<boolean>(false);\n\n    const handleClose = () => {\n        setOpen(false);\n    }\n\n    const handleOpen = () => {\n        setOpen(true);\n    }\n\n    const renderStudents = () => {\n        return studentList.map((data: any, idx: number) => {\n            return (\n                <ListItem>\n                    <ListItemIcon>\n                        <Avatar src={data.photoURL}></Avatar>\n                    </ListItemIcon>\n                    {data.userid === data.teacherid ? (\n                        <ListItemText\n                            primary={`${data.name} (Teacher)`} />\n                    ) : (\n                        <ListItemText\n                            primary={data.name} />\n                    )}\n                </ListItem>\n            )\n        })\n    }\n\n    return (\n        <>\n            <IconButton onClick={handleOpen} style={{ float: \"right\" }}>\n                <PeopleIcon />\n            </IconButton>\n            <Dialog open={open} onClose={handleClose}>\n                <DialogTitle>Joined Students</DialogTitle>\n                <DialogContent>\n                    {!studentList && <CircularProgress style={{ marginLeft: \"50%\", marginTop: \"50px\" }} />}\n                    {studentList && (\n                        <List>\n                            {renderStudents()}\n                        </List>\n                    )}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose} color=\"primary\">\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n}\n\nfunction Class(props: any) {\n    const { user } = props;\n    const { cid } = useParams<any>();\n    const [status, setStatus] = useState<any>('idle');\n    const [classData, setClassData] = useState<any>(undefined);\n    const [assignmentList, setAssignmentList] = useState<any>(undefined);\n    const [isTeacher, setIsTeacher] = useState<any>(undefined);\n    const [studentList, setStudentList] = useState<any>(undefined);\n\n    const [open, setOpen] = useState<boolean>(false);\n    const [posting, setPosting] = useState<boolean>(false);\n    const nameRef = useRef<any>('');\n    const descRef = useRef<any>('');\n\n    useEffect(() => {\n        updateAssignments();\n        (async () => {\n            const resp = await apiRequest({\n                route: `/classes/${cid}/students`,\n                method: 'GET',\n            });\n            setStudentList(resp.students);\n        })();\n    }, [])\n\n    const updateAssignments = async () => {\n        try {\n            const data = await apiRequest({\n                route: `/classes/${cid}`,\n                method: 'GET'\n            })\n            setStatus(data.status);\n            setClassData(data.class);\n            setAssignmentList(data.assignments);\n            setIsTeacher(data.class.teacherid === user.uid)\n        } catch (error) {\n            setStatus('failed');\n        }\n    }\n\n    const handleAssignmentCreate = async () => {\n        const name = nameRef.current.value;\n        const desc = descRef.current.value;\n        setPosting(true);\n\n        try {\n            if (!name || !desc) {\n                setPosting(false);\n                return alert('The form isn\\'t complete!')\n            }\n            await apiRequest({\n                route: `/classes/${cid}/assignments`,\n                payload: {\n                    name: name,\n                    description: desc\n                },\n                method: 'POST'\n            })\n            updateAssignments();\n            setOpen(false);\n        } catch (error) {\n            alert(error);\n        }\n        setPosting(false);\n    }\n\n    const handleClose = () => setOpen(false);\n    const handleOpen = () => setOpen(true);\n\n    const renderAssignments = () => {\n        if (!assignmentList || assignmentList.length === 0) {\n            return <Typography>Looks like there's nothing here.🎉</Typography>\n        }\n        return assignmentList.map((data: any, idx: any) => {\n            return (\n                <Grid item key={idx} xs={12}>\n                    <AssignmentCard {...data} isTeacher={isTeacher} />\n                </Grid>\n            )\n        })\n    }\n\n    if (status === 'idle') {\n        return <CircularProgress style={{ marginLeft: \"50%\", marginTop: \"50px\" }} />\n    } else if (status === 'failed') {\n        return <Typography>Something went wrong. Try logging out and back in.</Typography>\n    } else {\n        return (\n            <>\n                <Typography variant=\"h5\">{classData?.classname}</Typography>\n                <Typography variant=\"subtitle2\">Join Code: {classData?.joincode}</Typography>\n                {classData && classData.teacherid === user.uid && (\n                    <>\n                        <IconButton style={{ float: \"right\" }} onClick={handleOpen}>\n                            <AddButton />\n                        </IconButton>\n                        <StudentList studentList={studentList}/>\n                        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                            <DialogTitle id=\"form-dialog-title\">Create an assignment</DialogTitle>\n                            <DialogContent>\n                                <TextField\n                                    autoFocus\n                                    margin=\"dense\"\n                                    id=\"name\"\n                                    label=\"Assignment Name\"\n                                    type=\"text\"\n                                    fullWidth\n                                    inputRef={nameRef}\n                                    disabled={posting}\n                                    required\n                                />\n                                <TextField\n                                    multiline\n                                    margin=\"dense\"\n                                    id=\"name\"\n                                    label=\"Description\"\n                                    type=\"text\"\n                                    fullWidth\n                                    inputRef={descRef}\n                                    disabled={posting}\n                                    rows={8}\n                                    required\n                                />\n                            </DialogContent>\n                            <DialogActions>\n                                <Button disabled={posting} onClick={handleClose} color=\"primary\">\n                                    Cancel\n                        </Button>\n                                <Button disabled={posting} onClick={() => {\n                                    handleAssignmentCreate();\n                                }} color=\"primary\">\n                                    Create\n                        </Button>\n                            </DialogActions>\n                        </Dialog>\n                    </>\n                )}\n                <Grid container spacing={4}>\n                    {renderAssignments()}\n                </Grid>\n            </>\n        )\n    }\n}\n\nexport default Class;","import { useEffect, useState, useRef, forwardRef } from 'react';\nimport firebase from 'firebase';\nimport { useParams } from 'react-router-dom';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport Collapse from '@material-ui/core/Collapse';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport Dialog from '@material-ui/core/Dialog';\nimport CodeIcon from '@material-ui/icons/Code';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport TransitEnterexitIcon from '@material-ui/icons/TransitEnterexit';\nimport Divider from '@material-ui/core/Divider';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Grow from '@material-ui/core/Grow';\nimport Container from '@material-ui/core/Container';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport moment from 'moment';\n\n// @ts-ignore\nimport { FilePond, File, registerPlugin } from 'react-filepond';\nimport FilePondPluginFileRename from 'filepond-plugin-file-rename';\nimport FilePondPluginFileEncode from 'filepond-plugin-file-encode';\nimport FilePondPluginFileValidateSize from 'filepond-plugin-file-validate-size';\n\nimport { apiRequest, baseURL } from './utils';\nimport { StringLiteral } from 'typescript';\n\nregisterPlugin(FilePondPluginFileRename, FilePondPluginFileEncode, FilePondPluginFileValidateSize)\n\nconst Transition = forwardRef(function Transition(props, ref) {\n    // @ts-ignore\n    return <Grow ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles((theme) => ({\n    appBar: {\n        position: 'relative',\n    },\n    title: {\n        marginLeft: theme.spacing(2),\n        flex: 1,\n    },\n    formControl: {\n        minWidth: 120,\n    },\n    selectEmpty: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\nfunction Submission(props: any) {\n    const { submitted } = props;\n    const [files, setFiles] = useState([]);\n    const { cid, aid } = useParams<any>();\n    const [token, setToken] = useState<string | undefined>('');\n    const [submitting, setSubmitting] = useState<boolean>(false);\n    const entryPointRef = useRef<any>('');\n\n    useEffect(() => {\n        (async () => {\n            const token = await firebase.auth().currentUser?.getIdToken(true);\n            setToken(token);\n        })();\n    }, [])\n\n    const handleSubmission = async () => {\n        setSubmitting(true);\n        let entrypoint = entryPointRef.current.value;\n        entrypoint = entrypoint.replace(/\\s/g, \"\");\n        try {\n            if (!entrypoint || !(entrypoint.endsWith(\".py\") || entrypoint.endsWith(\".java\")) || !(props.submissions.some((e: any) => e.filename === entrypoint) || files.some((e: any) => e.filename === entrypoint))) {\n                setSubmitting(false);\n                return alert('Looks like your entrypoint is incorrectly formatted. It should end with .py or .java and should be one of your uploaded files.')\n            } else if (props.submissions.length === 0 && files.length === 0) {\n                if (!window.confirm('Submit with no files and mark as complete?')) return setSubmitting(false);\n            } else {\n                if (!window.confirm('Are you sure you want to submit? This can\\'t be undone.')) return setSubmitting(false);\n            }\n            const response = await apiRequest({\n                route: `/classes/${cid}/assignment/${aid}`,\n                method: \"POST\",\n                payload: {\n                    entrypoint: entrypoint\n                }\n            })\n\n            if (response.status) {\n                alert('Successfully submitted!');\n                window.location.reload();\n            }\n        } catch (e) {\n            console.log(e);\n            alert(e.message);\n        }\n        setSubmitting(false);\n    }\n\n    if (token) {\n        return (\n            <div style={{ marginTop: \"20px\" }}>\n                {!submitted && (\n                    <div className=\"App\">\n                        <FilePond\n                            files={files}\n                            onupdatefiles={setFiles}\n                            allowMultiple={true}\n                            maxFiles={12}\n                            allowRevert={false}\n                            name=\"files\"\n                            labelIdle='Drag and Drop your files or <span class=\"filepond--label-action\">Browse</span>.'\n                            maxFileSize=\"5MB\"\n                            labelMaxFileSizeExceeded=\"File is too large! Max filesize is 5MB.\"\n                            server={{\n                                process: {\n                                    url: `${baseURL}/classes/${cid}/assignment/${aid}/submissions`,\n                                    headers: {\n                                        authorization: token\n                                    }\n                                }\n                            }}\n                        />\n                        <TextField\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Entry Point (Case-Sensitive)\"\n                            type=\"text\"\n                            fullWidth\n                            inputRef={entryPointRef}\n                            disabled={submitting}\n                            required\n                        />\n                    </div>\n                )}\n                <Button onClick={handleSubmission} disabled={submitted} variant=\"contained\" color=\"primary\">{submitted ? \"Submitted\" : \"Submit Assignment\"}</Button>\n            </div>\n        )\n    } else {\n        return <CircularProgress variant=\"indeterminate\" style={{ marginLeft: \"50%\", marginTop: \"50px\" }} />\n    }\n}\n\nfunction GradeSubmissions() {\n    const { cid, aid } = useParams<any>();\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n    const [submitting, setSubmitting] = useState(false);\n    const [method, setMethod] = useState('');\n    const [resultList, setResultList] = useState<any>(undefined);\n    const [submissionList, setSubmissionList] = useState<any>(undefined);\n    const answerRef = useRef<any>('');\n    const inputStringRef = useRef<any>('');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const handleChange = (event: any) => {\n        setMethod(event.target.value);\n    };\n\n    const handleSubmission = async () => {\n        const inputString = inputStringRef.current.value;\n        setSubmitting(true);\n        try {\n            const response = await apiRequest({\n                route: `/classes/${cid}/assignment/${aid}/grade`,\n                method: 'POST',\n                payload: {\n                    inputString: inputString\n                }\n            })\n\n            console.log(response);\n            setSubmissionList(response.submissions);\n            setResultList(response.responses);\n        } catch (e) {\n            console.error(e);\n        }\n        setSubmitting(false);\n    };\n\n    const checkIfCorrect = (stdout: String) => {\n        const answer = answerRef.current.value;\n        switch (method) {\n            case 'INCLUDES':\n                if (stdout.includes(answer)) return true;\n                break;\n            case 'EXACTMATCH':\n                if (stdout === answer || stdout.trimEnd() === answer) return true;\n                break;\n            case 'NEUTRAL':\n                return false;\n            default:\n                return;\n        }\n    }\n\n    const renderSubmissions = () => {\n        return resultList!.map((data: any, idx: number) => {\n            const submission = submissionList[idx];\n            const fulfilled = data.status === 'fulfilled';\n            const correct = fulfilled && checkIfCorrect(data.value.stdout);\n            let avatarBackground;\n            if (correct) {\n                avatarBackground = \"#009F6B\"\n            } else if (fulfilled && !correct) {\n                avatarBackground = \"#FFD300\"\n            } else {\n                avatarBackground = \"#C40233\"\n            }\n            return (\n                <Grid item sm={12}>\n                    <Card>\n                        <CardHeader\n                            avatar={\n                                <Avatar style={{ backgroundColor: avatarBackground }}>\n                                    {fulfilled ? <CheckCircleOutlineIcon /> : <ErrorOutlineIcon />}\n                                </Avatar>\n                            }\n                            title={submission.studentname}\n                        />\n                        <CardContent>\n                            <Typography variant=\"subtitle2\">Entry Point: {submission.entrypoint}</Typography>\n                            <p></p>\n                            {fulfilled ? (\n                                <>\n                                    <Typography variant=\"h6\">Program output</Typography>\n                                    <Typography variant=\"body1\">{data.value.stdout}</Typography>\n                                </>\n                            ) : (\n                                <>\n                                    <Typography variant=\"h6\">Program output</Typography>\n                                    <Typography variant=\"body1\">{data.reason.stdout}</Typography>\n                                    <Typography variant=\"h6\">Program Error</Typography>\n                                    <Typography variant=\"body1\">{data.reason.stderr}</Typography>\n                                </>\n                            )}\n                        </CardContent>\n                    </Card>\n                </Grid>\n            )\n        })\n    }\n\n    return (\n        <div>\n            <Button disabled={submissionList && submissionList.length === 0} variant=\"contained\" color=\"primary\" onClick={handleClickOpen}>\n                Prepare for grading\n            </Button>\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Grade Submissions\n              </Typography>\n                    </Toolbar>\n                </AppBar>\n                <Container style={{ marginTop: \"20px\" }}>\n                    <Typography variant=\"h6\">Set your test case</Typography>\n                    <Typography variant=\"subtitle1\">Tip: if you would enter name first and then email when running the program regularly,\n                                                    you would enter with the line breaks<code><p>Tony Stark</p><p>tony@starkindustries.com</p></code></Typography>\n                    <FormControl className={classes.formControl}>\n                        <InputLabel>Method</InputLabel>\n                        <Select\n                            id=\"demo-simple-select\"\n                            value={method}\n                            onChange={handleChange}\n                            required\n                            disabled={submitting}\n                        >\n                            <MenuItem value={'INCLUDES'}>Output Includes (recommended)</MenuItem>\n                            <MenuItem value={'EXACTMATCH'}>Exact Match</MenuItem>\n                            <MenuItem value={'NEUTRAL'}>No Auto-Grading</MenuItem>\n                        </Select>\n                    </FormControl>\n                    <TextField\n                        multiline\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Program Input\"\n                        type=\"text\"\n                        fullWidth\n                        inputRef={inputStringRef}\n                        disabled={submitting}\n                        rows={3}\n                    />\n                    <TextField\n                        multiline\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Expected Output\"\n                        type=\"text\"\n                        fullWidth\n                        inputRef={answerRef}\n                        disabled={submitting}\n                        rows={3}\n                    />\n                    <Button variant=\"outlined\" color=\"primary\" onClick={handleSubmission} disabled={submitting}>Submit to server for grading!</Button>\n                    {submitting && (\n                        <div style={{ margin: \"50px\" }}>\n                            <LinearProgress />\n                            <Typography style={{ textAlign: \"center\" }} variant=\"h6\">Sit tight! We're running the code on our servers for you.</Typography>\n                            <img style={{ marginLeft: \"20%\", marginRight: \"auto\", borderRadius: \"30px\" }} src=\"https://thumbs.gfycat.com/MellowFriendlyDeermouse-size_restricted.gif\" alt=\"loading\"></img>\n                        </div>\n                    )}\n                    {resultList && (\n                        <>\n                            <Typography variant=\"h6\">Results</Typography>\n                            <Grid container spacing={4} style={{ marginTop: \"25px\" }}>\n                                {renderSubmissions()}\n                            </Grid>\n                        </>\n                    )}\n                </Container>\n            </Dialog>\n        </div>\n    );\n}\n\nfunction ViewAndRunCode(props: any) {\n    const { cid, aid } = useParams<any>();\n    const [submissionList, setSubmissionList] = useState<any>(undefined);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const { submissions } = await apiRequest({\n                    route: `/classes/${cid}/assignment/${aid}/submissions`,\n                    method: \"GET\",\n                })\n\n                setSubmissionList(submissions);\n            } catch (e) {\n                alert(e);\n            }\n        })();\n    }, [])\n\n    const renderSubmissions = () => {\n        if (submissionList.length === 0) return (\n            <>\n                <img style={{ width: \"200px\", height: \"200px\", borderRadius: \"100%\", marginLeft: \"20%\", marginTop: \"100px\" }} src=\"https://i.imgur.com/Ht5ZipG.png\" alt=\"none\"></img>\n                <div style={{ textAlign: \"center\", marginTop: \"-100px\", }}>\n                    <Typography variant=\"h6\">Looks like there aren't any submissions yet.</Typography>\n                    <Typography variant=\"subtitle1\">When one of your students submits an assignment, it will show up here.</Typography>\n                </div>\n            </>\n\n        );\n        return submissionList?.map((submission: any, idx: any) => {\n            return (\n                <Grid item key={idx}>\n                    <Card>\n                        <CardHeader\n                            avatar={\n                                <Avatar src={submission.photoURL}></Avatar>\n                            }\n                            title={submission.studentname} />\n                        <CardContent>\n                            <Typography variant=\"body1\">Files submitted</Typography>\n                            <Typography variant=\"subtitle2\">{moment(submission.timestamp).calendar()}</Typography>\n                            <List dense>\n                                {submission.files.map((data: any, idx: any) => {\n                                    return (\n                                        <ListItem>\n                                            <ListItemIcon>\n                                                {(data.filename === submission.entrypoint) ? <TransitEnterexitIcon /> : <DescriptionIcon />}\n                                            </ListItemIcon>\n                                            <ListItemText\n                                                primary={data.filename} />\n                                        </ListItem>\n                                    )\n                                })}\n                            </List>\n                        </CardContent>\n                    </Card>\n                </Grid>\n            )\n        })\n    }\n\n    if (submissionList) {\n        return (\n            <div style={{ marginTop: \"20px\" }}>\n                <Typography variant=\"h6\">Student Submissions</Typography>\n                <GradeSubmissions />\n                <Grid container spacing={4} style={{ height: \"600px\", overflowY: \"auto\", marginTop: \"10px\" }}>\n                    {renderSubmissions()}\n                </Grid>\n            </div>\n        )\n    } else {\n        return (\n            <CircularProgress style={{ marginLeft: \"50%\", marginTop: \"50px\" }} />\n        )\n    }\n}\n\nfunction Assignment(props: any) {\n    const { cid, aid } = useParams<any>();\n    const [assignment, setAssignment] = useState<any>(undefined);\n    const { name, description, id, created_at, classid } = assignment ?? {};\n    const [submitted, setSubmitted] = useState<any>(undefined);\n    const [submissions, setSubmissions] = useState<any>(undefined);\n    const [isTeacher, setIsTeacher] = useState<any>(undefined);\n\n    useEffect(() => {\n        (async () => {\n            try {\n                const data = await apiRequest({\n                    route: `/classes/${cid}/assignment/${aid}`,\n                    method: 'GET'\n                })\n\n                setAssignment(data.assignment);\n                setSubmitted(data.isSubmitted);\n                setSubmissions(data.submissions);\n                setIsTeacher(data.isTeacher);\n            } catch (error) {\n                alert(error)\n            }\n        })();\n    }, [])\n\n    const renderSubmitted = () => {\n        if (!submissions) return;\n        return submissions.map((data: any, idx: any) => {\n            return (\n                <Grid item>\n                    <Card>\n                        <CardHeader\n                            avatar={\n                                <Avatar>\n                                    <CodeIcon />\n                                </Avatar>\n                            }\n                            title={data.filename} />\n                    </Card>\n                </Grid>\n            )\n        })\n    }\n\n    if (assignment) {\n        return (\n            <>\n                <Grid container spacing={6}>\n                    <Grid item sm={6}>\n                        <Typography variant=\"h4\">{name}</Typography>\n                        <Typography variant=\"subtitle1\">{moment(created_at).calendar()}</Typography>\n                        <hr></hr>\n                        <Typography variant=\"body1\">{description}</Typography>\n                    </Grid>\n                    <Grid item sm={6}>\n                        <div>\n                            {!isTeacher && (\n                                <>\n                                    <Typography variant=\"h6\">Your work</Typography>\n                                    <Grid container spacing={4} style={{ marginTop: \"10px\" }}>\n                                        {renderSubmitted()}\n                                    </Grid>\n                                    <Submission submitted={submitted} submissions={submissions} />\n                                </>\n                            )}\n                            {isTeacher && <ViewAndRunCode />}\n                        </div>\n                    </Grid>\n                </Grid>\n            </>\n        )\n    } else {\n        return <CircularProgress style={{ marginLeft: \"50%\", marginTop: \"50px\" }} />\n    }\n}\n\nexport default Assignment;","import { useRef } from 'react';\nimport { HashRouter, Route, useHistory, } from 'react-router-dom';\n\nimport './firebaseinit';\nimport './App.css';\nimport 'filepond/dist/filepond.css';\nimport firebase from 'firebase';\n\nimport Home from './Home';\nimport Login from './Login';\nimport Classes from './Classes';\nimport Class from './Class';\nimport Assignment from './Assignment';\n\nimport React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Avatar from '@material-ui/core/Avatar';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport List from '@material-ui/core/List'\nimport Container from '@material-ui/core/Container';\nimport AddIcon from '@material-ui/icons/Add';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport { apiRequest } from './utils';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: \"monospace\"\n  },\n}));\n\nfunction AvatarButton(props: any) {\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const handleClick = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-controls=\"simple-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleClick}\n      >\n        <Avatar alt={props.user.displayName} src={props.user.photoURL} />\n      </IconButton>\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <MenuItem onClick={() => {\n          handleClose();\n\n        }}>{props.user.displayName}</MenuItem>\n        <MenuItem onClick={() => {\n          handleClose();\n\n        }}>Settings</MenuItem>\n        <MenuItem onClick={() => {\n          handleClose();\n          firebase.auth().signOut();\n        }}>Logout</MenuItem>\n      </Menu>\n    </div>\n  )\n}\n\nfunction ButtonAppBar(props: any) {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const [anchorEl, setAnchorEl] = useState(null);\n  const [joinOpen, setJoinOpen] = React.useState<boolean>(false);\n  const [createOpen, setCreateOpen] = React.useState<boolean>(false);\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const joinRef = useRef('');\n  const nameRef = useRef('');\n  const descRef = useRef('');\n\n  const handleClick = (event: any) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const handleJoinClass = async () => {\n    // @ts-ignore\n    const code = joinRef.current.value.replace(/ /g, '');\n    if (code.length > 6) return alert('Invalid Class Code!')\n    setLoading(true)\n\n    try {\n      const response = await apiRequest({\n        route: '/joinclass',\n        payload: {\n          joinCode: code\n        },\n        method: 'POST'\n      })\n      window.location.reload();\n    } catch (e) {\n      alert(e);\n    }\n    setLoading(false);\n  }\n\n  const handleCreateClass = async () => {\n    // @ts-ignore\n    const name = nameRef.current.value;\n    // @ts-ignore\n    const desc = descRef.current.value;\n\n    if (!name || !desc) return alert('Please complete the form!')\n\n    try {\n      const response = await apiRequest({\n        route: '/classes',\n        payload: {\n          name: name,\n          description: desc\n        },\n        method: 'POST'\n      })\n      alert(`Class created with join code ${response.joinCode}`)\n      window.location.reload();\n    } catch (e) {\n      alert(e);\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar color=\"inherit\" position=\"fixed\">\n        <Toolbar>\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton> */}\n          <Typography onClick={() => history.push('/h')} className={classes.title} variant=\"h5\" noWrap style={{ cursor: \"pointer\", }}>\n            codingScale\n          </Typography>\n          <Route path=\"/h\">\n            <IconButton onClick={handleClick}>\n              <AddIcon />\n            </IconButton>\n            <Menu\n              id=\"simple-menu\"\n              anchorEl={anchorEl}\n              keepMounted\n              open={Boolean(anchorEl)}\n              onClose={handleClose}\n            >\n              <MenuItem onClick={() => {\n                setJoinOpen(true);\n                handleClose();\n              }}>Join Class</MenuItem>\n              <Dialog open={joinOpen} onClose={() => setJoinOpen(false)} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Join class</DialogTitle>\n                <DialogContent>\n                  <DialogContentText>\n                    Ask your teacher for the class code, then enter it here.\n                   </DialogContentText>\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"6-Digit Class Code\"\n                    type=\"text\"\n                    fullWidth\n                    inputRef={joinRef}\n                    disabled={loading}\n                    required\n                  />\n                </DialogContent>\n                <DialogActions>\n                  <Button disabled={loading} onClick={() => setJoinOpen(false)} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button disabled={loading} onClick={() => {\n                    handleJoinClass();\n                  }} color=\"primary\">\n                    Join\n                  </Button>\n                </DialogActions>\n              </Dialog>\n              <MenuItem onClick={() => {\n                setCreateOpen(true);\n                handleClose();\n              }}>Create Class</MenuItem>\n              <Dialog open={createOpen} onClose={() => setCreateOpen(false)} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Create a new class</DialogTitle>\n                <DialogContent>\n                  <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Class Name\"\n                    type=\"text\"\n                    fullWidth\n                    inputRef={nameRef}\n                    disabled={loading}\n                    required\n                  />\n                  <TextField\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Description\"\n                    type=\"text\"\n                    fullWidth\n                    inputRef={descRef}\n                    disabled={loading}\n                    required\n                  />\n                </DialogContent>\n                <DialogActions>\n                  <Button disabled={loading} onClick={() => setCreateOpen(false)} color=\"primary\">\n                    Cancel\n                  </Button>\n                  <Button disabled={loading} onClick={() => {\n                    handleCreateClass();\n                  }} color=\"primary\">\n                    Create\n                  </Button>\n                </DialogActions>\n              </Dialog>\n            </Menu>\n          </Route>\n          {props.user !== null && (\n            <>\n              {props.user ? (\n                <AvatarButton user={props.user} />\n              ) : (\n                <Button onClick={() => history.push('/login')}>\n                  Sign in\n                </Button>\n              )}\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </div >\n  );\n}\n\nfunction App() {\n  const [user, setUser] = useState<any>(null);\n  const history = useHistory();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n      if (user) {\n        setUser(user);\n        user.getIdToken().then(console.log);\n      } else {\n        history.push('/login')\n        setUser(undefined);\n      }\n    })\n  })\n\n  return (\n    <>\n      <ButtonAppBar user={user} />\n      <Container style={{ marginTop: \"128px\" }}>\n        {user !== null && (\n          <>\n            <Route exact path=\"/\"><Home /></Route>\n            <Route exact path=\"/h\"><Classes user={user} /></Route>\n            <Route exact path=\"/c/:cid\"><Class user={user} /></Route>\n            <Route exact path=\"/c/:cid/a/:aid\"><Assignment /></Route>\n          </>\n        )}\n        <Route exact path=\"/login\"><Login user={user} /></Route>\n      </Container>\n    </>\n  );\n}\n\nfunction AppWithRouter() {\n  return (\n    <HashRouter>\n      <App />\n    </HashRouter>\n  )\n}\n\nexport default AppWithRouter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}